// header 들 선언
#include <iostream>

// PI, EPSILON 정의하기

/* 
- 2d vector용 class/struct 정의하기
- ==,<,+,-,* 가 정의되어야 함
- 2d vector의 길이를 리턴하는 함수가 정의되어야 함
- normalize된 벡터를 리턴하는 함수가 정의되어야 함
- x축의 양의 방향으로 부터 이 벡터까지 반시계 방항으로 잰 각도를 리턴하는 함수가 정의되어야 함
- 이 instance가 A라고 했을때:
    A . B (dot product) 를 리턴하는 함수가 정의되어야 함
    A x B (cross product) 를 리턴하는 함수가 정의되어야 함
    A 를 B에 project했을때 나오는 벡터를 리턴하는 함수가 정의되어야 함
*/

/*
<함수들 정의하기>
- a가 b에 비해 p에 얼마나 가까운가?
- 원점에서 벡터 b가 벡터 a의 반시계 방향이면 양수, 시계방향이면 음수, 평행이면 0을 반환
- 점 p를 기준으로 벡터 b가 벡터 a의 반시계 방향이면 양수, 시계방향이면 음수, 평행이면 0을 반환
- a,b 를 포함하는 무한대 길이의 직선과 c,d를 포함하는 무한대 길이 직선의 교점을 x에 반환한다. 두 선이 평행하면 (겹치는 경우 포함) false, 아니면 true를 반환한다
- (a,b)와 (c,d)가 평행한 두 선분일 때 (무한대 길이 아님! 각 점이 양 끝) 이들이 겹치는지 확인한다
- p가 (a,b)를 감싸면서 각 변이 x,y축에 평행한 최소 사각형 내부에 있는지 확인한다. a,b,p는 일직선 상에 있다고 가정한다
- (a,b) 선분과 (c,d) 선분의 교점을 p에 반환한다. 교점이 여러개일 경우 (=두 선분이 평행하고 겹칠경우) 아무 점이나 반환한다. 두 선분이 교차하지 않을 경우 false를 반환한다
- 두 선분이 서로 접촉하는지 여부를 반환한다
- 점 p에서 a,b가 만드는 길이 무한대 직선에 내린 수선의 발을 구한다
- 점 p와 (a,b) 직선 사이의 거리를 구한다
- 주어진 단순다각형 p의 넓이를 구한다. p는 꼭지점의 위치 벡터의 집합으로 주어진다
- 점 q가 다각형 p 안에 포함되어 있을 경우 참, 아닌 경우 거짓을 반환한다. q가 다각형의 경계 위에 있는 경우의 반환 값은 정의되어 있지 않다
- 반평면과 단순 다각형의 교집합을 구한다. a->b를 포함하는 직선으로 다각형 p를 자른 뒤, a->b 의 왼쪽에 있는 부분들을 반환한다
*/

int main(int argc, char** argv){
}